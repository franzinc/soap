*******************************************************************************
*** LEAVE THIS AT THE TOP OF THE FILE ***
don't forget to change the version in code/xversion.cl if you do anything
user visible.
*******************************************************************************

2009-05-01  Kevin Layer  <layer@gemini.franz.com>

	* xmp-soap.cl: don't use version-from-file

2009-03-17    <mm@FRIGATE>

	* Makefile:  soap.002 ...
	* soap.cl (defpatch): 
	     set patch number to 2 for 8.1,  4 for 8.0,  6 for 7.0
	* xmp-soap.cl (soap-decode-float): 
	     new fn to decode float and double correctly [bug18350]
	
2008-10-30  Kevin Layer  <layer@gemini.franz.com>

	* Makefile: soap.001
	* build.cl: defpatch # for 8.1
	* soap.cl: defpatch for 8.1
    from jkf:
	* xmp-soap.cl: rfe8375: soap server should return wsdl if
	  requested

2007-06-25    <mm@PROA>

	* xmp-wsdl.cl (wsdl-add-form): NEW exported function
	       (wsdl-index-form): add new mode :user to identify code inserted with
	                           wsdl-add-form
	
2007-05-01    <mm@PROA>

	* soapex.cl: add timeout to most examples  [bug16944]
	     and comment about external services

2007-03-19    <mm@PROA>

	* xmp-wsdl.cl (wsdl-make-interface): :publish argument to wsdl-generate-code
	                      must be a keyword/value list
		(wsdl-bind-operation): when  :respose==:symbol, then return type
	                     in call to export must be the symbol, not the string
	* xmp-wsdl.cl (wsdl-slots-of-type-spec): allow any sequence collector
	                 at the top-level of element type
	             (wsdl-emit-object-classes): emit :error in call to soap-result-typed
	                 only in the most strict cases [spr32806]

2007-03-10    <mm@PROA>

	* xmp-wsdl.cl (wsdl-report-imports): new method to report included
	                   and imported files
		       (decode-wsdl-source): use wsdl-report-imports
		       (wsdl-make-interface): use wsdl-report-imports

2007-02-20    <mm@PROA>

	* xmp-wsdl.cl (wsdl-make-interface): emit publish arg  derived from
	                                  uri [rfe6782]
	* xmp-wsdl.cl (decode-wsdl-source): make sure that WSDL string is 
	              not printed in comment [bug16611]
		      (wsdl-generate-code): add new call with info=:method-body
	                      called for body of server method
	           (wsdl-make-interface): emit server-port default derived from
	                                  uri [rfe6782]
		   (wsdl-generate-code): look at generate-comments option, if true,
	                    emit w-g-c form as a comment in the code file
			    (wsdl-index-form): emit ;; comment for top-level forms
	* xmp-wsdl.cl (wsdl-bind-operation): add message name to error format string

2007-01-17  Kevin Layer  <layer@gemini.franz.com>

	* Makefile: incf patch # for 8.0
	* build.cl: incf patch # for 8.0
	* soap.cl: incf patch # for 8.0

2007-01-15    <mm@PROA>

	* xmp-wsdl.cl (wsdl-bind-operation): do lenient message lookup
	* xmp-soap.cl (call-soap-method): set soap-message-headers slot
	     (xmp-server-implementation): set soap-message-headers slot
	                  and accept messages with simple (not complex) body
	* xmp-soap.cl (soap-add-header): specialize second arg on soap-header
	      (soap-add-header): add more general method that calls make-soap-header
	* xmp-soap.cl (soap-encode-headers): needed to add tag to header element
	* xmp-schema.cl (define-schema-elements): complexContent has its own definition
	                                          of restriction
			(schema-decode-attribute): decode "ref" attribute
			(schema-lookup-group): look a little harder
			(schema-single-collector): follow group ref to def
			(schema-parts-to-type): look for restriction/simpleType/list
	* xmp-wsdl.cl (wsdl-emit-object-classes): [bug16488] make sure type spec is
	                      is not quoted in check-type form
			      (wsdl-emit-wrapper): [bug16488] make sure type spec is
	                           not quoted in check-type form
			      (wsdl-define-type): arrayType may not be the only attribute
	* xmp-soap.cl (soap-add-header): add header at the end of list if before
	                     or after not found
	        (soap-encode-headers): [bug16470] new method that combines header list
		(soap-encode-message): [bug16470] call soap-encode-headers
	* xmp-schema.cl (schema-maybe-loose-type): [bug16483] avoid lookup of nil type
	            (schema-parts-to-type): [bug16483] avoid wrapping complex type
	                                       with :simple

2006-09-15  Kevin Layer  <layer@gemini>

	* Makefile: fix name of soap patches, don't use ANSI lisp use
	  modern

2006-09-12  Kevin Layer  <layer@gemini>

	* Makefile: for new single fasl

2006-08-28    <mm@PROA>

	* RELNOTES: add entries for patches soap.002(8.0)  soap.005(7.0)
	* xmp-wsdl.cl (encode-wsdl-file): make sure that message elements are in 
	          package associated with targetNamespace
	* build.cl (filenames): modify to default to single fasl file
	* xmp-wsdl.cl: replaced all :|| symbols with xmp-symbol calls
	     (wsdl-lookup-type): add loose lookup for type attribute
	* xmp-soap.cl: replaced all :|| symbols with xmp-symbol calls
	* xmp-schema.cl: replaced all :|| symbols with xmp-symbol calls
	* xmp-base.cl (xmp-symbol): new macro to allow fixed-case symbols in
	                       case-portable fasl files
	* xmp-wsdl.cl (wsdl-make-tname): emit name qualified to target namespace
	                                 when generating wsdl file
	* xmp-base.cl (xmp-defined-element-def): follow named type to def
	* xmp-soap.cl (soap-encode-element): add :nilled-or-default :nilled-or-empty 
	                                     :nilled-or-none options
	* xmp-base.cl (xmp-decode-body): make sure empty element gets passed to 
	                            xmp-simple-content (for empty-element handling)
	* xmp-soap.cl (xmp-server-implementation): use modified parameters 
	                                   returned by xmp-accept-method [bug16269]
	   (def-soap-simple-content enc:|string|): default for empty element is ""
	* build.cl (filenames): update patch level
	* soap.cl ("soap"): update patch level
	* xmp-soap.cl (call-soap-method): aleas return two values
	* xmp-wsdl.cl (decode-wsdl-source): add import argument
	* xmp-wsdl.cl (wsdl-bind-operation): generate list for lisp-name in exports
                                            [bug16269]
	* xmp-base.cl (xmp-accept-method): remap arglist if lisp-name is a list
	                                   [bug16269]
	* xmp-soap.cl (xmp-signature-equal): review and revise comparison
	* xmp-wsdl.cl (xmp-begin-element): parse and insert included file
	* xmp-base.cl (xmp-copy): add destination argument
	* xmp-soap.cl (soap-encode-element): look for options on top-level name first
	* xmp-base.cl (xmp-getf-in-def): look for attributes on named types as well
	* xmp-soap.cl (soap-resolve-type): continue past atomic def
	* xmp-soap.cl(xmp-begin-element): revise error messages
	* xmp-base.cl (define-xmp-element): store any attributes in def 
	         (xmp-lookup): look for attributes on type def as well
		 (define-xmp-type): store any attributes in def 
		 (xmp-defined-element-def): split out xmp-defined-array-def
	* xmp-soap.cl (soap-encode-element): look for null-element=:none
	* xmp-soap.cl: add default value for all numeric fields [bug16260]
	     (xmp-encode): delete the (incorrect) :around method [bug16259]
	              empty element is sent from soap-encode-element
	* xmp-base.cl (xmp-prefix-to-package): Never search for a prefix
	                           outside the context of XML document
	* xmp-wsdl.cl (decode-wsdl-namespaces): revised output layout
	* build.cl: put provide calls in soapa and soapm files
	* xmp-schema.cl (schema-component-to-collector): add group recognizer
	     (schema-lookup-base): lookup definition of base type
	            if xmp-xml-syntax is not :strict, try in target namespace
		       and in default namespace
		       (schema-decode-attribute): may return 2n values
	* xmp-wsdl.cl (wsdl-define-type): map xsd:union to xsd:string
	* xmp-schema.cl (schema-component): add schema-source slot
	       (schema-component-to-cpart): expand group refs [bug16201]
	* xmp-wsdl.cl (wsdl-export-symbol): do not export from keyword package
 	              (wsdl-compose-parts): detect conflicts earlier
		      (wsdl-compose-name): always makes exported symbol
		      (wsdl-print-env): try to control package and case in output
		      (wsdl-encoder): omit prefix if object-access=:object-class
	* xmp-wsdl.cl (wsdl-bind-operation): add suffix=:compose option
	* xmp-soap.cl (xmp-call-method): skip the call to xmp-decode-message
	                                 when debug=:stop [bug16004]
	* xmp-wsdl.cl (wsdl-emit-wrapper): add check-type calls for some t specializers
	* xmp-soap.cl (def-soap-simple-content): add check-type option
	* xmp-base.cl (encode-base64-string): accept also array (of integers)
	              (decode-base64-string): always return (array (signed-byte 8))
	* xmp-wsdl.cl (wsdl-compose-part): add :capitalize strategy
	* xmp-soap.cl (soap-encode-element): send nil attribute with nillable empty elt
	* xmp-wsdl.cl (wsdl-accessor): intern all accessors in the same package
	* xmp-wsdl.cl (wsdl-constructor): use new :object-access option
	            (wsdl-make-symbol): add export kw arg
		    (wsdl-walk-form): export top-level defining symbols
		    (wsdl-make-interface): add exports to defpackage forms
		    (defpackage :net.xmp.wsdl): export soap-array-mixin
	* xmp-wsdl.cl (wsdl-emit-wrappers): interact with :response option
	    (wsdl-make-interface): always call wsdl-compose-name with keyword
	                  constants instead of strings for better case selection
	     (qt): look for already quoted 
	     (wsdl-make-symbol): make sure from is always string(s)
	     (wsdl-emit-wrapper): use different names for overloaded message methods
	     (wsdl-emit-wrapper): always ignore top-level element name in reply
	     (wsdl-do-element):  Try to use the message name as an alternate name
	* xmp-wsdl.cl (decode-wsdl-source): save source of wsdl in instance
	      (wsdl-make-interface): print source info in outfile [rfe6554]
	* xmp-wsdl.cl (wsdl-make-interface): add redef keyword
	                    determine output files early
		(wsdl-query-redef): new function to enforce redef option
		(wsdl-walk-form): was failing to keep list of all names
		(wsdl-make-interface): print warning if conflicts
		(wdsl-make-name): new function to centralize interning of symbols
	* xmp-wsdl.cl (wsdl-index-form): call wsdl-generate-code for each top-level
	                                 form [rfe6553]
		  (wsdl-make-interface): add response arg [rfe6555]
		  (wsdl-resolve-type): cope with simple sef by name
		  (break-at-case-shifts): was returning nil if empty string arg
	* soap.cl: do not use #+(version= 6)   must use version>=
	* build.cl: do not use #+(version= 6)   must use version>=

2006-06-22  Kevin Layer  <layer@gemini>

	* Makefile: bug16292: make sure bignum-server.cl gets into
	  distribution

2006-02-02  Kevin Layer  <layer@gemini>

	* Makefile: tweaks for patch building

2006-01-19    <mm@PROA>

	* xmp-test.cl (run5): refined nillable tests
	* xmp-base.cl (xmp-decode-element): check for nillable before calling decode-body
	             (nillable initarg): set to :ignore for compatibility with old code 
	
2006-01-18    <mm@PROA>

	* build.cl (filenames): set patch level to 1 for 8.0 and 4 for 7.0
	             revise building of combined fasl
	* soap.cl ("soap"): set patch level to 1 for 8.0 and 4 for 7.0
	* xmp-soap.cl (soap-encode-parts): one more case for anyType
	* xmp-test.cl (xmeth-def): update Xmethods namespaces
	* xmp-base.cl (xmp-nillable-p): new function to test for nillable elt
	             (xmp-decode-body): call xmp-nillable-p
		  (xmp-decode-element): do not call xmp-complex-content for
	                      ignored nillable elements
	* xmp-test.cl: add run5 - nillable tests

2006-01-09    <mm@PROA>

	* build.cl (filenames): set patch level=3 for 7.0
	* soap.cl ("soap"): set patch level=3 for 7.0

2006-01-05  Kevin Layer  <layer@gemini>

	* build.cl,
	* soap.cl: add defpatch's for 6.2 and 7.0

2005-11-22    <mm@PROA>

	* xmp-wsdl.cl (define-wsdl-names): new fn collects all WSDL definitions
	           (soap-new-environment): reset all global vars and defs
	* xmp-soap.cl (define-soap-names): new fn collects all SOAP definitions
	* xmp-schema.cl (define-schema-elements): new fn collects all Schema
	                         element definitions into a single call
	* xmp-base.cl (xmp-new-environment): reset all global vars
	* xmp-wsdl.cl (decode-wsdl-source): add class argument
	     (wsdl-generate-code): NEW EXPORTED gf used in code gen by make-interface
	                           [rfe6371]
	     (wsdl-make-interface): use wsdl-generate-code for soap-message-server call
	                            use wsdl-generate-code for soap-message-client call
				    use wsdl-generate-code for top-level calls
	     (wsdl-bind-operation): use wsdl-generate-code for top-level calls
	     (wsdl-emit-object-classes): use wsdl-generate-code for top-level calls
	     (wsdl-emit-wrapper): use wsdl-generate-code for top-level calls

	
2005-11-21    <mm@PROA>

	* build.cl (filenames): stop using Gray stream in fasl copy
	* xmp-base.cl (xmp-lookup): add delete keyword
	      (define-xmp-element): when type-spec is nil, delete the definition
	* xmp-base.cl: add new connector initarg :xml-syntax
	* xmp-wsdl.cl (encode-wsdl-file): add types and elements arguments [rfe6381]
	* xmp-wsdl.cl (decode-wsdl-source): add stream argument
	* xmp-wsdl.cl (decode-wsdl-source): add xml-syntax arg
	* xmp-soap.cl (soap-make-fault): export, code arg may be keyword
	          (xmp-server-implementation): LispError is a sub-code [bug15790]
	* xmp-soap.cl (soap-encode-parts): encode simple value for anyType [bug15783]
	* xmp-mtest.cl: NEW FILE systematic testing of XML Schema parser
	* xmp-schema.cl: update all Schema element defs from spec, use :seq? [bug15774]
	* xmp-test.cl (ss4): add test for encoding simple value for anyType

	
2005-09-30    <mm@PROA>

	* xmp-test.cl (run3): new test for asjusr-array strategy args
	* xmp-base.cl (xmp-content-string): allow user to modify adjust-array
	             strategy [rfe6307]
		     :message-init initarg -> initial-size
	                                   -> (initial-size extend-hint)
	* xmp-soap.cl (xmp-copy): delete xmp-copy methods
	* xmp-aserve.cl ("xmp-aserve"): delete xmp-copy methods
	* xmp-base.cl (xmp-copy): new design - copy all instance slots without
	                "no-xmp-copy" in documentation string

2005-09-02    <mm@PROA>

	* xmp-base.cl (xmp-match-complex-tail): fix error in matching :or
	* xmp-base.cl (xmp-extract-namespaces): remove dependence on pxml
	* xmp-base.cl: add xmp-nillable accessor
	   (xmp-decode-body): look for 'nil' attribute
	   (define-xmp-element): add :nillable argument
	* xmp-base.cl (xmp-lookup): also keep element attributes in tables
	* xmp-base.cl (xmp-decode-body): refine error message [bug15502]
	              (xmp-decode-body): partial fix for  [bug15528] 
	* xmp-base.cl (net.xml.sax:start-prefix-mapping): ignore xmlns= entries
	* xmp-base.cl (xmp-search-map): export
	* xmp-wsdl.cl (wsdl-make-interface): add service=:none
	* xmp-wsdl.cl (wsdl-add-element): collect attributes in defined-elements list
           	      (encode-wsdl-file): emit nillable attributes
	* xmp-wsdl.cl (wsdl-make-interface): emit stronger case-mode warning
	                 (encode-wsdl-file): add target-package argument
	             (wsdl-encode-type-def): look for element name too [bug15508]
	* xmp-wsdl.cl (encode-wsdl-file): revise handling of target arg [bug15509]
	* xmp-schema.cl (schema-parts-to-type): look for <simpleType><restriction>
   	         (package xs): add minInclusive and maxInclusive
	* xmp-schema.cl (schema-component-to-cpart): collect and pass nillable attribute

2005-08-19  Martin Mikelsons  <mm@gemini>

	* xmp-soap.cl (soap-version): fix format strings [bug15543] 
	
2005-07-13  Kevin Layer  <layer@gemini>

	* Makefile: add more files to soap.002 patch

2005-07-08  Kevin Layer  <layer@gemini>

	* Makefile: soap.002
	* build.cl: soap.002
	* soap.cl: soap.002

2005-07-08    <mm@PROA>

	* soapval1.cl: add more data types to manyTypesTest2
	* xmp-base.cl (xmp-encode-attribute): default ns does not apply to attributes
	                                       [bug15443]
	* xmp-base.cl (xmp-decode-body): revised to combine  string fragments into
	                         a single string before calling xmp-simple-content
	* xmp-base.cl (xmp-warning): signal true warning
	* xmp-base.cl (*xmp-compare-uri*): NEW exported var default nil, may be #\/
	* xmp-base.cl (def-xmp-sub-classes): NEW macro to define all xmp-connector
	                           subclasses
	* xmp-base.cl (xmp-complex-content): call xmp-note-attributes to save
	                           all element attributes in hashtable
	* xmp-base.cl (xmp-define-namespace-map): allow uri in default slot
	* xmp-aserve.cl (xmp-message-send): send additional headers and add initargs for
	                          aserve http arguments [rfe6233]
	* xmp-aserve.cl ("xmp-aserve"): use def-xmp-sub-classes
	* xmp-schema.cl (schema-component-name): add default method for schema-component
	* xmp-soap.cl (soap-result-internal): resolve multirefs [rfe6169]
	* xmp-soap.cl (soap-get-attributes): new fn [rfe6196]
	* xmp-soap.cl ("soap"): use def-xmp-sub-classes
	        (soap-result-string): NEW function
	* xmp-soap.cl (enc:): add defs for most Schema types
	* xmp-soap.cl (soap-encode-element): look for option :computed-attributes
	                           on type options and call a function
	* xmp-soap.cl (soap-connector): add soap-body-form slot
	                         values are :one or :many   [rfe6217]
	* xmp-soap.cl (xmp-call-method): peek at reply and signal error if 
			                 definitely not an XML string
		     (call-soap-method): return a third value [rfe6217 partial]
	                                   - list of ALL Body elements
		(soap-server-connector): add server-message-body slot to hold list
	                                  of body elements
	  (soap-encode-parts-to-object): new function used by server-implementation
	             (call-soap-method): signal error when result is soap fault
	* xmp-soap.cl (soap-result-part): new accessor for result from call-soap-method
	              (soap-result-only): new accessor for result from call-soap-method 
	* xmp-wsdl.cl (encode-wsdl-file): do not emit decl for pre-def type [bug15454]
              	   (wsdl-make-interface): add send-atype and send-asize options
	* xmp-wsdl.cl (wsdl-emit-object-classes): collect all types first
	                    before generating code
		      (wsdl-emit-object-classes): generate new-xxx for arrays
	* xmp-wsdl.cl (wsdl-emit-object-classes): encode and decode recursively
	* xmp-wsdl.cl (wsdl-compose-name): new function to make prettier case-portable
	                                   names
		    (wsdl-make-interface): add compose keyword
		    (wsdl-emit-object-classes): new function to emit defclasses for
		                             soap structs
	* xmp-wsdl.cl (wsdl-make-interface): try to anticipate case-mode problems
	* xmp-wsdl.cl (wsdl-file-connector): add wsdl-url-name slot
	* xmp-wsdl.cl (wsdl-do-element): need to rename overloaded operations
	* xmp-wsdl.cl (wsdl-make-interface): add :text argument
	              (wsdl-bind-operation): try to resolve overloaded opeations
	* xmp-wsdl.cl (wsdl-define-type): allow
	                   (:simple-type (:simple-content (:extension)))
	* xmp-test.cl (test-soap-local): new test functions	
	* bignum-server.cl: revise for case portability
	* soapex.cl (simple-server): revise for case portability
	* soapex.cl (sp01): mark some services as unavailable


2005-05-02  Kevin Layer  <layer@gemini>

	* Makefile: 1st 7.0 patch rule
	* build.cl: patch
	* soap.cl: patch v1

2005-04-29    <mm@PROA>

	* xmp-base.cl (xmp-copy): copy base-dns slot
	* xmp-base.cl (xmp-assoc): new function
	* xmp-base.cl: delete xmp-make-connector
	* xmp-base.cl (xmp-getf-in-def): new fn - look for options in named type defs
	                                 as well
	* xmp-aserve.cl (xmp-start-server): fix misspelled :server arg to aserve:start
	* xmp-soap.cl (xmp-server-implementation): set message info in server
	                   before calling soap-invoke-method
		export soap-server-message-method -return -signature -action accessors
	        NEED DOC UPDATE
	* xmp-soap.cl (soap-encode-element): use xmp-getf-in-def and look
	                   in :element options as well
	* xmp-soap.cl (soap-sub-element-content): generalize arglist
	                    item pattern &rest more-patterns (for recursive search)
		NEED DOC UPDATE
	* xmp-soap.cl (soap-message-client): add class argument
	                   delete xmp-make-connector
	* xmp-soap.cl (soap-encode-message): lokk for type def as method last
	* xmp-soap.cl (xmp-call-method): use xmp-getf-in-def instead of xmp-getf-in-part
	                                 when looking for action option
	* xmp-wsdl.cl: fix modeline
	    (wsdl-do-element): look for part with defined type instead of
	                       defined element

2005-01-13  Steve Haflich  <smh@bach>

	* xmp-wsdl.cl: Fix wrong package in emacs mode line.

2004-10-08    <mm@KETCHTOO>
	
	* README.txt: revised
	* bignum-server.cl: NEW FILE example code
	* xmp-base.cl (delete-namespace): revised def
	* xmp-base.cl (xmp-parse-message): look for vacuous package or uri decls
	* xmp-wsdl.cl (wsdl-make-interface): add :map arg for wsdl-map-name slot
	* xmp-wsdl.cl (wsdl-bind-operation): simplify generated client and server defuns
	* xmp-schema.cl (schema-element-name): new fn
	* xmp-soap.cl (xmp-server-implementation): refine debug info
	* xmp-test.cl: add interface to xmethods

	
2004-10-05    <mm@KETCHTOO>

	* xmp-base.cl: fix default features
	* RELNOTES: summarize 7.0 changes

	
2004-10-05    <mm@KETCHTOO>

	* xmp-soap.cl (soap-encode-element): allow :send-type t
	               (soap-connector): add slot and :send-type initarg
	* xmp-soap.cl (soap-encode-message): method argument may be a type name
	      to allow message body with several elements
	* xmp-soap.cl: totally revamped namespace handling
	* xmp-wsdl.cl: totally revamped namespace handling
	* xmp-wsdl.cl (wsdl-make-interface): 
	   DOC CHANGE: eval defaults to nil, not linked to expand-singleton
	* xmp-wsdl.cl (decode-wsdl-namespaces): add optional namespaces
	                       look in list of base namespaces for other
			       than needed
	* xmp-wsdl.cl (encode-wsdl-file): add missing comma in backquote [spr29015]
	* xmp-base.cl: totally revamped namespace handling
	* xmp-base.cl: add features :soap-sax :soap-lxml :soap-pxml
	* xmp-base.cl (xmp-decode): add Return to ignorable whitespace list (sax)
	* xmp-base.cl: do not call pxml-version in 7.0
	   (xmp-decode-qualified-name): special treatment for names like xmlxx:yy (sax)
	* xmp-aserve.cl (xmp-header-slot): remove string quotes [spr29245]
	* xmp-schema.cl: revised data structures generated during schema analysis
	* xmp-schema.cl (schema-ignored-part): new macro
	* xmp-schema.cl (schema-collect-target): name may be string or symbol
	         (schema-decode-attribute): attr name may be string or symbol
	* xmp-test.cl: add testing instructions
	* soapex.cl: add debug option to test functions
	             revise namespace constants
	* soapex.cl (gcp): add comment about undefined warning
	* soapval1.cl (make-validator1-server): add debug option to test function
	                         drop namespace constant
	* soapval1.cl (validator1-many-types2): new test


2004-08-16  Kevin Layer  <layer@gemini>

	* Makefile: add to `clean'

2004-05-11  Kevin Layer  <layer@gemini>

	* build.cl,
	* soap.cl: update defpatch's
	* xmp-soap.cl: fix warning
	* xmp-wsdl.cl: fix warning
	* Makefile: patch 004

*******************************************************************************
join from acl62 to trunk on 2/12/04
next join tag: use join2.sh
*******************************************************************************

2004-04-23    <mm@KETCHTOO>

	* xmp-wsdl.cl (wsdl-define-type): fix error in ANSI mode
	
	
2004-04-23    <mm@KETCHTOO>
	
	* xmp-soap.cl (soap-encode-parts): remove compiler warning


2004-04-23    <mm@KETCHTOO>

	* RELNOTES: add summary of changes
	* xmp-wsdl.cl
              (encode-wsdl=file): new function
           (wsdl-bind-operation): assume top element always has parts
                             output element is always "<operation>Response"
           (wsdl-make-interface): add verbose argument
           (wsdl-make-interface): server path should be uri-path
           (wsdl-make-interface): intern vars in file-package
	* xmp-soap.cl
           (soap-message-server): add :start-new case for :enable arg
             (xmp-begin-element): suppress error message for unknown
                                response element or return element
             (soap-find-element): accept elt def as well as name
            ((enc:|float| xsd:|float|)): fix bug13943
	* xmp-aserve.cl (xmp-start-server): add :new keyword arg
	* xmp-base.cl (xmp-uri-to-package): always look in message-dns too
                    (xmp-client-connector): add client-start slot
	* soapex.cl (simple-server): add namespaces to this example
	* xmp-aserve.cl (xmp-message-send): use client-start slot

	
2004-01-16  Kevin Layer  <layer@gemini>

	* xmp-soap.cl: get version from ChangeLog

2003-12-15  Kevin Layer  <layer@crikey>

	* xmp-soap.cl: workaround for bug13913

2004-01-23  Kevin Layer  <layer@gemini>

	* Makefile: patch-dist rule for v3 patch
	* build.cl: patch version
	* soap.cl: patch version
	* xmp-wsdl.cl: remove compile warning

2004-01-23    <mm@KETCHTOO>

	* xmp-wsdl.cl (wsdl-bind-operation): equate namespace and targetNamespace
	                 use name attribute from operation as method wrapper
	            (make-client-interface): add port argument
		    (make-server-interface): add port argument
		    (wsdl-make-interface): add port argument
	                 link service/binding/portType correctly
			 (encode-wsdl-file): NEW wsdl file writer (partial)

	* xmp-base.cl (same-uri): ignore mismatch if only trailing /
	* xmp-schema.cl (schema-file-connector): ch super to xmp-string-in-out-connector
	* xmp-soap.cl (xmp-encode): split float specializer into two methods

2003-12-01  Kevin Layer  <layer@crikey>

	* Makefile,
	* build.cl,
	* soap.cl: incf version in defpatch

2003-11-25  Martin Mikelsons <mm@ketchtoo>
	
	* xmp-test.cl (wsdl5): add WSDL tests and more
	* xmp-wsdl.cl: NEW FILE
	* xmp-schema.cl: add many more typesand many changes for WSD support
	* xmp-base.cl (xmp-decode-element): new method
	          (xmp-match-complex-tail): correct serious bugs in complex cases
	          and many changes for WSD support
	* xmp-aserve.cl (xmp-enable-server): set aserve-server slot from default var
	* soapval1.cl: add package nickname defs
	* soapex.cl: add package nickname defs
	* build.cl: add xmp-wsdl file
	* xmp-soap.cl (soap-encode-element): add :encoding option for encodingStyle attr
	          and many changes for WSD support
	* xmp-xmlrpc.cl: upgrade to lates version of xmp


2003-09-30  Martin Mikelsons <mm@ketchtoo>
	
	* soapex.cl (sp10): fix case portability problem
	     (doGoogleSearchResponse): fix case portability problem
	* xmp-test.cl: fix some case portability problems

	
2003-09-29  Martin Mikelsons <mm@ketchtoo>

	* xmp-test.cl (test-clients): test all remote client examples
	           (test-validator1): test validator1 server with varying data
	* xmp-soap.cl (enc:|float| xsd:|float|): keep extra digits of precision
	* xmp-soap.cl (soap-encode-parts): emit empty elements in :seq1
	* xmp-base.cl (xmp-match-element-def): test strings with equal
	             (xmp-normal-complex-def): use second value from 
	                                       xmp-decode-qualified-name

	
2003-09-25  Kevin Layer  <layer@crikey>

	* Makefile: soap-client.htm is history; tweaks
	* build.cl: incf the patch #
	* soap.cl: update defpatch

2003-09-23  Martin Mikelsons <mm@ketchtoo>

	* soapex.cl (simple-server): simple server example and test
	* xmp-soap.cl (xmp-server-implementation): SOAP server changes
	* xmp-soap.cl (soap-alist-to-plist): add recursive argument
	* README.txt: mention soapval1.cl
	* soapval1.cl: NEW FILE 
	* xmp-base.cl (xmp-export-method): order of methods is order of exports
	* xmp-base.cl (xmp-match-complex-tail): revise body to handle :or
	* xmp-aserve.cl (xmp-enable-server): copy server instance

	
2003-07-30  Kevin Layer  <layer@crikey>

	* (REMOVE) soap-client.htm: use html6 module one instead
	* Makefile: get soap-client.htm from html6 module

	* soap.cl: move defpatch first to be first

2003-07-29  Kevin Layer  <layer@crikey>

	* build.cl: further hackery needed to make the patch work.  The
	  soapm and soapa files need a defpatch form, which is now
	  automatically generated and compiled.

2003-07-28  Kevin Layer  <layer@crikey>

	* build.cl: fix for building: don't compile soap.fasl in an upper
	  case lisp
	* soap.cl: add defpatch; use require instead of load
	* Makefile: add licensing hack

2003-07-28    <layer@HOBART>

	* Makefile: tweaks for windows

2003-07-28  Kevin Layer  <layer@crikey>

	* Makefile: use adcl instead of alisp8 to build

2003-07-24  Kevin Layer  <layer@crikey>

	* soap-client.htm: fix links
	* README.txt: minor fixes
	* xmp-base.cl: move require of :pxml up before the first package
	  use, otherwise autoload tries to load it
	* (NEW) Makefile

2003-07-23  Kevin Layer  <layer@crikey>

	* (NEW) soap-client.htm
